#pragma checksum "C:\Users\CavelVellenoweth\source\repos\FinancialApp\FinancialApp\Views\Home\Account.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "485d876362a57f0428ed3fd37badcc6498dd3bc6"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Account), @"mvc.1.0.view", @"/Views/Home/Account.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/Account.cshtml", typeof(AspNetCore.Views_Home_Account))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\CavelVellenoweth\source\repos\FinancialApp\FinancialApp\Views\_ViewImports.cshtml"
using FinancialApp;

#line default
#line hidden
#line 2 "C:\Users\CavelVellenoweth\source\repos\FinancialApp\FinancialApp\Views\_ViewImports.cshtml"
using FinancialApp.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"485d876362a57f0428ed3fd37badcc6498dd3bc6", @"/Views/Home/Account.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"84780e5404561d069f0ab22308edd4d36332c8f0", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Account : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 2 "C:\Users\CavelVellenoweth\source\repos\FinancialApp\FinancialApp\Views\Home\Account.cshtml"
  
    ViewData["Title"] = "Account";
    int myID;
    int.TryParse(ViewContext.RouteData.Values["id"].ToString(), out myID);
    string filterType = "";
    string filterValue = "";
    if (ViewContext.RouteData.Values["FilterType"] != null)
    {
        filterType = ViewContext.RouteData.Values["filterType"].ToString();
    }
    if (ViewContext.RouteData.Values["filterValue"] != null)
    {
        filterValue = ViewContext.RouteData.Values["filterValue"].ToString();
    }
    int tAmmount;
    var myTransactions = ViewData["MyTransactions"] as IEnumerable<FinancialApp.Models.FinanceContext.Transaction>;
    var startOfWeek = DateTime.Now.AddDays(DayOfWeek.Monday - DateTime.Now.DayOfWeek);
    switch (filterType)
    {
        case "ByWeek":
            myTransactions = myTransactions.Where(m => m.Date.Date >= startOfWeek.Date);
            break;
        case "ByMonth":
            myTransactions = myTransactions.Where(m => m.Date.Month.ToString() == ((int)FinanceContext.Months.Parse(typeof(FinanceContext.Months), filterValue)).ToString());
            break;
        case "ByYear":
            myTransactions = myTransactions.Where(m => m.Date.Year.ToString() == filterValue);
            break;
        case "ByPaymentType":
            myTransactions = myTransactions.Where(m => m.IsRecurring == (filterValue == "Recurring"));
            break;
        default:
            myTransactions = ViewData["MyTransactions"] as IEnumerable<FinancialApp.Models.FinanceContext.Transaction>;
            break;
    }

#line default
#line hidden
            BeginContext(1573, 14, true);
            WriteLiteral("\r\n<h2>Account ");
            EndContext();
            BeginContext(1588, 4, false);
#line 39 "C:\Users\CavelVellenoweth\source\repos\FinancialApp\FinancialApp\Views\Home\Account.cshtml"
       Write(myID);

#line default
#line hidden
            EndContext();
            BeginContext(1592, 457, true);
            WriteLiteral(@"</h2>
<table class=""table table-bordered"">
    <thead>
        <tr>
            <th>
                Transaction ID
            </th>
            <th>
                With Account
            </th>
            <th>
                Amount
            </th>
            <th>
                Transaction Type
            </th>
            <th>
                Transaction Date
            </th>
        </tr>
    </thead>

    <tbody>

");
            EndContext();
#line 63 "C:\Users\CavelVellenoweth\source\repos\FinancialApp\FinancialApp\Views\Home\Account.cshtml"
         foreach (var transaction in myTransactions)
        {

#line default
#line hidden
            BeginContext(2114, 60, true);
            WriteLiteral("            <tr>\r\n                <th>\r\n                    ");
            EndContext();
            BeginContext(2175, 25, false);
#line 67 "C:\Users\CavelVellenoweth\source\repos\FinancialApp\FinancialApp\Views\Home\Account.cshtml"
               Write(transaction.TransactionID);

#line default
#line hidden
            EndContext();
            BeginContext(2200, 27, true);
            WriteLiteral("\r\n                </th>\r\n\r\n");
            EndContext();
#line 70 "C:\Users\CavelVellenoweth\source\repos\FinancialApp\FinancialApp\Views\Home\Account.cshtml"
                 if (transaction.ToAccountID == myID) //checks if transation is to "me"
                {
                    tAmmount = transaction.Amount;

#line default
#line hidden
            BeginContext(2387, 50, true);
            WriteLiteral("                    <td>\r\n                        ");
            EndContext();
            BeginContext(2438, 25, false);
#line 74 "C:\Users\CavelVellenoweth\source\repos\FinancialApp\FinancialApp\Views\Home\Account.cshtml"
                   Write(transaction.FromAccountID);

#line default
#line hidden
            EndContext();
            BeginContext(2463, 1, true);
            WriteLiteral(" ");
            EndContext();
            BeginContext(2485, 29, true);
            WriteLiteral("\r\n                    </td>\r\n");
            EndContext();
#line 76 "C:\Users\CavelVellenoweth\source\repos\FinancialApp\FinancialApp\Views\Home\Account.cshtml"
                }
                else
                {
                    tAmmount = -transaction.Amount;

#line default
#line hidden
            BeginContext(2627, 50, true);
            WriteLiteral("                    <td>\r\n                        ");
            EndContext();
            BeginContext(2678, 23, false);
#line 81 "C:\Users\CavelVellenoweth\source\repos\FinancialApp\FinancialApp\Views\Home\Account.cshtml"
                   Write(transaction.ToAccountID);

#line default
#line hidden
            EndContext();
            BeginContext(2701, 29, true);
            WriteLiteral("\r\n                    </td>\r\n");
            EndContext();
#line 83 "C:\Users\CavelVellenoweth\source\repos\FinancialApp\FinancialApp\Views\Home\Account.cshtml"
                }

#line default
#line hidden
            BeginContext(2749, 16, true);
            WriteLiteral("                ");
            EndContext();
#line 84 "C:\Users\CavelVellenoweth\source\repos\FinancialApp\FinancialApp\Views\Home\Account.cshtml"
                 if (tAmmount.ToString().EndsWith("00") == true)
                {


#line default
#line hidden
            BeginContext(2836, 50, true);
            WriteLiteral("                    <td>\r\n                        ");
            EndContext();
            BeginContext(2888, 32, false);
#line 88 "C:\Users\CavelVellenoweth\source\repos\FinancialApp\FinancialApp\Views\Home\Account.cshtml"
                    Write((tAmmount / 100m).ToString("C0"));

#line default
#line hidden
            EndContext();
            BeginContext(2921, 29, true);
            WriteLiteral("\r\n                    </td>\r\n");
            EndContext();
#line 90 "C:\Users\CavelVellenoweth\source\repos\FinancialApp\FinancialApp\Views\Home\Account.cshtml"

                }
                else
                {

#line default
#line hidden
            BeginContext(3012, 50, true);
            WriteLiteral("                    <td>\r\n                        ");
            EndContext();
            BeginContext(3064, 31, false);
#line 95 "C:\Users\CavelVellenoweth\source\repos\FinancialApp\FinancialApp\Views\Home\Account.cshtml"
                    Write((tAmmount / 100m).ToString("C"));

#line default
#line hidden
            EndContext();
            BeginContext(3096, 29, true);
            WriteLiteral("\r\n                    </td>\r\n");
            EndContext();
#line 97 "C:\Users\CavelVellenoweth\source\repos\FinancialApp\FinancialApp\Views\Home\Account.cshtml"
                }

#line default
#line hidden
            BeginContext(3144, 16, true);
            WriteLiteral("                ");
            EndContext();
#line 98 "C:\Users\CavelVellenoweth\source\repos\FinancialApp\FinancialApp\Views\Home\Account.cshtml"
                 if (transaction.IsRecurring == true)
                {

#line default
#line hidden
            BeginContext(3218, 88, true);
            WriteLiteral("                    <td>\r\n                        Recurring\r\n                    </td>\r\n");
            EndContext();
#line 103 "C:\Users\CavelVellenoweth\source\repos\FinancialApp\FinancialApp\Views\Home\Account.cshtml"
                }
                else
                {

#line default
#line hidden
            BeginContext(3366, 92, true);
            WriteLiteral("                    <td>\r\n                        Non-Recurring\r\n                    </td>\r\n");
            EndContext();
#line 109 "C:\Users\CavelVellenoweth\source\repos\FinancialApp\FinancialApp\Views\Home\Account.cshtml"
                }

#line default
#line hidden
            BeginContext(3477, 42, true);
            WriteLiteral("                <td>\r\n                    ");
            EndContext();
            BeginContext(3520, 16, false);
#line 111 "C:\Users\CavelVellenoweth\source\repos\FinancialApp\FinancialApp\Views\Home\Account.cshtml"
               Write(transaction.Date);

#line default
#line hidden
            EndContext();
            BeginContext(3536, 44, true);
            WriteLiteral("\r\n                </td>\r\n            </tr>\r\n");
            EndContext();
#line 114 "C:\Users\CavelVellenoweth\source\repos\FinancialApp\FinancialApp\Views\Home\Account.cshtml"
        }

#line default
#line hidden
            BeginContext(3591, 33, true);
            WriteLiteral("    </tbody>\r\n\r\n</table>\r\n<button");
            EndContext();
            BeginWriteAttribute("onclick", " onclick=\"", 3624, "\"", 3724, 5);
            WriteAttributeValue("", 3634, "location.href", 3634, 13, true);
            WriteAttributeValue(" ", 3647, "=", 3648, 2, true);
            WriteAttributeValue(" ", 3649, "\'", 3650, 2, true);
#line 118 "C:\Users\CavelVellenoweth\source\repos\FinancialApp\FinancialApp\Views\Home\Account.cshtml"
WriteAttributeValue("", 3651, Url.Action("Payment","Home",new { id = myID,filterType = "New"  },null), 3651, 72, false);

#line default
#line hidden
            WriteAttributeValue("", 3723, "\'", 3723, 1, true);
            EndWriteAttribute();
            BeginContext(3725, 47, true);
            WriteLiteral(" type=\"button\">  Make Payment</button>\r\n<button");
            EndContext();
            BeginWriteAttribute("onclick", " onclick=\"", 3772, "\"", 3874, 5);
            WriteAttributeValue("", 3782, "location.href", 3782, 13, true);
            WriteAttributeValue(" ", 3795, "=", 3796, 2, true);
            WriteAttributeValue(" ", 3797, "\'", 3798, 2, true);
#line 119 "C:\Users\CavelVellenoweth\source\repos\FinancialApp\FinancialApp\Views\Home\Account.cshtml"
WriteAttributeValue("", 3799, Url.Action("Payment","Home",new { id = myID,filterType = "Cancel" },null), 3799, 74, false);

#line default
#line hidden
            WriteAttributeValue("", 3873, "\'", 3873, 1, true);
            EndWriteAttribute();
            BeginContext(3875, 44, true);
            WriteLiteral(" type=\"button\">  Cancel Payment</button>\r\n\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
